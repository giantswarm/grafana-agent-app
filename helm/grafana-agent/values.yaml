global:
  image:
    registry: gsoci.azurecr.io
  podSecurityContext:
    fsGroup: 473
    runAsGroup: 473
    runAsNonRoot: true
    runAsUser: 473
    seccompProfile:
      type: RuntimeDefault

# Enable Kyverno PolicyException
kyvernoPolicyExceptions:
  enabled: true
  namespace: giantswarm

networkPolicy:
  flavor: cilium
  cilium:
    # You can override CNP egress/ingress rules
    egress: []
    ingress: []

psp:
  enabled: false

## ExtraSecret can be used to store various data in an extra secret
## For instance, we can use it to store logging credentials in order to push data to a logging system:
## data:
##   url: <logging url where to send data>
##   username: <user with write access>
##   password: <user password>
extraSecret:
  # name: <secret name where are stored those credentials>
  annotations: {}
  data: {}

serviceAccount:
  create: true

grafana-agent:
  # You can make the whole chart ineffective by setting this one to "false"
  enabled: true

  image:
    repository: giantswarm/grafana-agent
  configReloader:
    image:
      repository: giantswarm/configmap-reload

  serviceMonitor:
    enabled: true

  agent:
    extraArgs:
    - --disable-reporting
    mounts:
      # -- Extra volume mounts to add into the Grafana Agent container.
      extra:
        # This is needed to allow alloy to create files when using readOnlyRootFilesystem
        - name: agent-tmp
          mountPath: /tmp/agent
    securityContext:
      allowPrivilegeEscalation: false
      capabilities:
        drop:
        - ALL
      privileged: false
      readOnlyRootFilesystem: true
    listenPort: 8080

  controller:
    volumes:
      # -- Extra volumes to add to the Grafana Agent pod.
      extra:
      - name: agent-tmp
        emptyDir: {}
